import telebot
from telebot import types
from random import choice
import logging
from googletrans import Translator

bot = telebot.TeleBot("8146419335:AAEEdHIpEIr5XtkM7B-oy9XvOlR9c5g4aIA")  # –ó–∞–º–µ–Ω–∏—Ç–µ "YOUR_TOKEN_HERE" –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
user_languages = {}
user_translation_status = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
questions = {
    "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞?": "python",
    "–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª–µ?": "7",
    "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫—Ä–∞—Å–Ω–æ–≥–æ –∏ —Å–∏–Ω–µ–≥–æ?": "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π",
    "–ö–∞–∫–æ–π —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –æ–∫–µ–∞–Ω –Ω–∞ –ó–µ–º–ª–µ?": "—Ç–∏—Ö–∏–π",
}

user_scores = {}


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    btn_1 = types.InlineKeyboardButton("–ü–æ—Å–ª—É—à–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –º—É–∑—ã–∫—É üòé", callback_data="music")
    btn_4 = types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é üë®‚ÄçüíªHELPüë®‚Äçüíª", callback_data="help")
    btn_3 = types.InlineKeyboardButton("üßû‚Äç‚ôÇÔ∏è–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞üßû‚Äç‚ôÇÔ∏è", callback_data="translate")
    btn_2 = types.InlineKeyboardButton("üéÆÔ∏è–°—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?üéÆÔ∏è", callback_data="start_game")
    markup.row(btn_1)
    markup.row(btn_2)
    markup.row(btn_3)
    markup.row(btn_4)
    bot.send_message(message.chat.id, f"{message.from_user.first_name}, —Å–º–æ—Ç—Ä–∏, —è –∫–æ–µ —á—Ç–æ –º–æ–≥—É! –∂–º–∞–∫–∞–π –∫–Ω–æ–ø–∫–∏!ü§ìü§ìü§ì",
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def handle_callback(callback):
    if callback.data == "music":
        bot.send_message(callback.message.chat.id,
                         f'{callback.from_user.first_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É /music –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∏.')
    elif callback.data == "translate":
        bot.send_message(callback.message.chat.id,
                         f'{callback.from_user.first_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π '
                         '–∫–æ–º–∞–Ω–¥—É /setlang –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞.')
    elif callback.data == "help":
        bot.send_message(callback.message.chat.id, f'{callback.from_user.first_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É /help')
    elif callback.data == "start_game":
        bot.send_message(callback.message.chat.id,
                         f'{callback.from_user.first_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É /start_game')
    else:
        bot.send_message(callback.message.chat.id, f'{callback.from_user.first_name}, —Å–æ—Ä—è–Ω, —Å–∫–æ—Ä–æ –¥–æ–±–∞–≤–ª—é –µ—â–µ —á—Ç–æ-—Ç–æ!')


@bot.message_handler(commands=['music'])
def music(message):
    music_list = ["nh.mp3", "gtdjiu.mp3", "kavkaz.mp3", "koni.mp3", "last.mp3", "lesnik.mp3", "molodost.mp3",
                  "obojau.mp3"]
    file = open(f"music/{choice(music_list)}", "rb")
    bot.send_audio(message.chat.id, file)


@bot.message_handler(commands=['translate'])
def translate(message):
    bot.send_message(message.chat.id,
                     "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /setlang –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞.")


@bot.message_handler(commands=['setlang'])
def set_language(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç
    if len(message.text.split()) > 1:
        lang = message.text.split()[1].lower()
        if lang in ['en', 'de']:
            user_languages[message.from_user.id] = lang
            bot.reply_to(message,
                         f'–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: {"–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" if lang == "en" else "–ù–µ–º–µ—Ü–∫–∏–π"}.\n'
                         f'–ß—Ç–æ–±—ã  –≤–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_translation.')
        else:
            bot.reply_to(message,
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –¥–æ–±–∞–≤–∏–≤ –≤ –∫–æ–Ω–µ—Ü /setlang: "en" –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏–ª–∏ '
                         '"de" –¥–ª—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ.\n'
                         '–ß—Ç–æ–±—ã  –≤–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_translation.')
    else:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —è–∑—ã–∫: –ê–Ω–≥–ª–∏–π—Å–∫–∏–π - "/setlang en" –∏–ª–∏ –ù–µ–º–µ—Ü–∫–∏–π - "/setlang de".')


@bot.message_handler(commands=['stop_translation'])
def stop_translation(message):
    user_id = message.from_user.id
    user_translation_status[user_id] = False  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
    bot.reply_to(message,
                 "–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_translation.\n"
                 "–õ–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start")


@bot.message_handler(commands=['start_translation'])
def start_translation(message):
    user_id = message.from_user.id
    user_translation_status[user_id] = True  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
    bot.reply_to(message, "–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤–∫–ª—é—á–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.\n"
                          "–ß—Ç–æ–±—ã  –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop_translation.")


@bot.message_handler(content_types=['text'])
def translate_text(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_translation_status.get(user_id, True):  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–µ–≤–æ–¥ –≤–∫–ª—é—á–µ–Ω
        translator = Translator()
        text_to_translate = message.text

        # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        target_language = user_languages.get(user_id, 'en')

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–º–µ—Ü–∫–∏–π –∫–∞–∫ —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç "–ø—Ä–∏–≤–µ—Ç"
        if '–ø—Ä–∏–≤–µ—Ç' in text_to_translate.lower():
            target_language = 'de'

        if not text_to_translate:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")
            return

        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
            translated = translator.translate(text_to_translate, src='ru', dest=target_language)
            bot.reply_to(message, f'–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {translated.text}')
        except Exception as e:
            bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: {str(e)}")
    else:
        bot.reply_to(message, "–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_translation –¥–ª—è –µ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è.")


@bot.message_handler(commands=["help"])
def help_info(message):
    bot.send_message(message.chat.id, "<b>–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å</b>:\n"
                                      "1. <em>–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –∏–ª–∏ –ù–µ–º–µ—Ü–∫–∏–π - "
                                      "'/translate'</em>\n"
                                      "2. <em>–ü–æ—Å–ª—É—à–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –º—É–∑—ã–∫—É –∏–∑ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–µ—Å–µ–Ω - '/music'</em>\n"
                                      "3. <em>–°—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É - '/start_game'</em>", parse_mode='html')


@bot.message_handler(commands=['start_game'])
def start_game(message):
    user_scores[message.from_user.id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id,
                     f"{message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –ù–∞–ø–∏—à–∏—Ç–µ /quiz, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.")


@bot.message_handler(commands=['quiz'])
def quiz(message):
    question = list(questions.keys())[0]  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    bot.send_message(message.chat.id, question)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(message, check_answer, question)


def check_answer(message, question):
    user_answer = message.text.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    correct_answer = questions[question].lower()  # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç

    if user_answer == correct_answer:
        user_scores[message.from_user.id] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
        bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ")
    else:
        bot.send_message(message.chat.id, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {questions[question]}.")

    # –£–¥–∞–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞
    del questions[question]

    if questions:  # –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã
        next_question = list(questions.keys())[0]
        bot.send_message(message.chat.id, next_question)
        bot.register_next_step_handler(message, check_answer, next_question)
    else:
        # –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
        final_score = user_scores[message.from_user.id]
        bot.send_message(message.chat.id, f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {final_score} –∏–∑ {len(user_scores)}.")
        del user_scores[message.from_user.id]  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è


@bot.message_handler(commands=['help_message'])
def help_message(message):
    bot.send_message(message.chat.id,
                     "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n/start_game - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n/quiz - –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n/help_message - –ø–æ–º–æ—â—å")


bot.infinity_polling()
